service: ${self:custom.skillsmapper.name}-pipeline

frameworkVersion: ">=1.0.0 <2.0.0"

plugins:
  - serverless-step-functions

custom:
  skillsmapper: ${file(../skillsmapper.yml)}
  private: ${file(../private.yml)}
  events: ${file(../events.yml)}
  tables: ${file(../tables.yml)}

provider:
  name: aws
  runtime: nodejs6.10
  region: ${self:custom.private.region}
  environment:
    NEO4J_URL: ${self:custom.private.neo4j-url}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - "sns:Publish"
      Resource:
       - "Ref" : "MessageReceived"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":"
            - "table/"
            - ${self:custom.skillsmapper.name}
            - "-"
            - ${self:custom.tables.messages-received}

functions:
  receiveEmail:
    handler: receiveEmail.receiveEmail
    environment:
      SNS_MESSAGE_RECEIVED:
        Fn::Join:
          - ""
          - - "arn:aws:sns:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":"
            - ${self:custom.skillsmapper.name}
            - "-"
            - ${self:custom.events.message-received}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":"
                - ${self:custom.skillsmapper.name}
                - "-"
                - ${self:custom.events.new-email}
          topicName: ${self:custom.skillsmapper.name}-${self:custom.events.new-email}
  storeMessage:
    handler: storeMessage.storeMessage
    environment:
      MESSAGES_RECEIVED_TABLE: ${self:custom.skillsmapper.name}-${self:custom.tables.messages-received}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":"
                - ${self:custom.skillsmapper.name}
                - "-"
                - ${self:custom.events.message-received}
          topicName: ${self:custom.skillsmapper.name}-${self:custom.events.message-received}
  storeFact:
    handler: storeFact.storeFact
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":"
                - ${self:custom.skillsmapper.name}
                - "-"
                - ${self:custom.events.message-received}
          topicName: ${self:custom.skillsmapper.name}-${self:custom.events.message-received}
stepFunctions:
  stateMachines:
    testStateMachine:
      events:
        - http:
            path: step
            method: GET
      definition:
        Comment: "Test State Machine"
        StartAt: FirstState
        States:
          FirstState:
            Type: Pass
            Result: first
            Next: LastState
          LastState:
            Type: Pass
            Result: last
            End: true

resources:
  Resources:
    NewEmail:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.skillsmapper.name}-${self:custom.events.new-email}
    MessageReceived:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.skillsmapper.name}-${self:custom.events.message-received}
    MessagesReceivedDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.skillsmapper.name}-${self:custom.tables.messages-received}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5